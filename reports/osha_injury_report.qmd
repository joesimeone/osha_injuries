---
title: "Osha Injury Report"
format:
  html:
    fig-align: center
    fig-cap-location: top
    toc: true
    toc-location: left
    toc-expand: true
    number-sections: true
    css: styles.css
    embed-resources: true
    other-links: 
      - text: OSHA Severe Injury Data
        href: https://www.osha.gov/severeinjury
      - text: Quarterly Census of Employment & Wages (QCEW)
        href: https://www.bls.gov/cew/
      - text: NAICS Codes
        href: https://www.census.gov/programs-surveys/economic-census/year/2022/guidance/understanding-naics.html
editor: source
---

## Intro:

Welcome to the OSHA Severe Injury Data exploratory analysis. Here you'll find information on severe injuries trends for select injuries between 2015 and 2022

Data for this document comes from two sources: [Quarto](https://quarto.org) 1. [OSHA Severe Injury Data](https://www.osha.gov/severeinjury) 2. [Quarterly Census of Employment & Wages (QCEW)](https://www.bls.gov/cew/)

Severe injuries were defined as "defined as an amputation, in-patient hospitalization, or loss of an eye." Industries were identified by primary North American Industry Classification System (NAICS) NAICS code:

```{r}
#| label: "Load libraries, Import"
#| include: false 

library(tidyverse)
library(here)
library(data.table)
library(janitor)
library(RColorBrewer)
library(dygraphs)
library(reactable)
library(plotly)
library(knitr)
library(kableExtra)

# 11 Agriculture, Forestry, Fishing and Hunting
# 23 construction
# 21 Mining, Quarrying, and Oil and Gas Extraction
# 22 Utilities
# 48, 49 Transportation and Warehousing
# 31 - 33 Manufacturing
# 72 Accommodation and Food Services

files <- list.files(here("summary_data"), 
                    pattern = "osha_",
                    full.names = TRUE)

inj_tbls <- map(files, ~read.csv(.x))

tbl_names <-  c("all_inj", "ann_inj", "st_yr_inj", "st_inj")

names(inj_tbls) <- tbl_names
```

```{r}
#| label: Industry Codes
#| echo: false
#| fig-cap: "Table 1 - Codes Used in Analysis"


naics_codes <- tribble(
                        ~"NAICS Code", ~"Industry Name",
                        "21",  "Mining, Quarrying, & Oil and Gas Extraction",
                        "22",  "Utilities",
                        "23", "Construction",
                        "48-49", "Transportation & Warehousing",
                        "72", "Accomodation & Food Services"
  
)


naics_codes %>%
kbl() %>% 
kable_styling()
```

To provide context in changing employment trends, rates of injury per 100,000 jobs were calculated by taking the total number of industry specific injuries, and dividing them by the total number of a injury specific jobs in a given year.

```{r}
#| label: "Let's make some plots"
#| echo: false 
industry_plot <- ggplot(inj_tbls$all_inj, aes(reorder(industry_name, N), N,
                                           text = paste("Industry:", industry_name, "<br>",
                                           "Count:", format(N, big.mark = ","), "<br>",
                                           "Percent:", round(pct, 2), "<br>",
                                           "Rate Per 100k jobs:", round(injury_rate_per_100k, 2)))) +
                 geom_col(aes(fill = industry_name)) +
                 theme(panel.grid.major.y = element_blank(),
                       panel.grid.minor.y = element_blank(),
                       panel.grid.minor.x = element_blank(),
                       panel.grid.major.x = element_line(color = "black",
                                                         linetype = "dashed",
                                                         linewidth = .5),
                       panel.background = element_rect(fill = "ghostwhite"),
                       legend.position = "none") +
                 scale_fill_brewer(palette = "Dark2") +
                 labs(x = "", y = "Count") +
                 scale_y_continuous(labels = scales::comma) +
                 coord_flip()



make_ann_ts <- function(int_var, label){
industry_ann_ts <- inj_tbls$ann_inj %>% 
                   mutate(year_coerce = as.Date(ISOdate(year, 1,1))) %>% 
                   ggplot(aes(year_coerce, {{ int_var }}, color = industry_name, group = industry_name,
                              text = paste("Industry:", industry_name, "<br>",
                                           "Count:", format({{ int_var }}, big.mark = ","), "<br>",
                                           "Percent:", round(pct, 2), "<br>",
                                           "Rate Per 100k jobs:", round(injury_rate_per_100k, 2), "<br>",
                                           "Year:", year))) +
                           
                   geom_line(linetype = "solid") +
                   geom_point() +
                   theme(panel.grid.major.x = element_blank(),
                         panel.grid.minor.x = element_blank(),
                         panel.grid.minor.y  = element_blank(),
                         panel.grid.major.y = element_line(color = "gray",                                                                            linetype ="dashed",
                                                           linewidth = .25),
                         panel.background = element_rect(fill = "ghostwhite"),
                         legend.position = "none") +
                   labs(x = "", y = label) +
                   scale_y_continuous(labels = scales::comma) +
                   scale_color_brewer(palette = "Dark2")

return(industry_ann_ts)
}

ann_rate_ts <- make_ann_ts(injury_rate_per_100k, "Rate Per 100,000 Jobs")
ann_counts_ts <- make_ann_ts(N, "Count")
ann_emp_ts <- make_ann_ts(total_emp, "Total Jobs")




                      
```

## Figure 1.0: Total Injuries, By Selected Industry:

```{r}
#| label: Render bar graph
#| echo: false

ggplotly(industry_plot, tooltip = "text")

```

*Hover for total count of injuries by industry, percentage of all injuries by injury*

## Figure 1.1: Rate of Total Injuries By Selected Industry, 2015 - 2022,

#### Rate Per 100,000 Jobs:

```{r}
#| label: Render Rate time series
#| echo: false

ggplotly(ann_rate_ts, tooltip = "text")

```

*Hover for annual count of injuries by industry, industry percentage of total annual injuries.*

For context, I've also included the counts and denominators used to calculate our rates.

#### Injury Counts:

```{r}
#| label: Render Injury Count Time Series
#| echo: false

ggplotly(ann_counts_ts, tooltip = "text")
```

### Annual Employment Counts:

```{r}
#| label: Render Employment Count Time Series
#| echo: false

ggplotly(ann_emp_ts, tooltip = "text")
```

## Table 2: Total Injuries By State

To help guide queries for the last table, here's a table that shows the top 10 states with the most injuries:

```{r}
#| label: States with top 10 most injuries
#| echo: false
#| fig-cap: "States with the Most Injuries"
inj_tbls$st_inj <- as.data.table(inj_tbls$st_inj)

state_injuries <- inj_tbls$st_inj[, .(state, total)][
                  order(-total, state)]
state_injuries <- unique(state_injuries, by = c("state"))
top_ten_states <- state_injuries[1:10]

top_ten_states %>%
kbl() %>% 
kable_styling()


```

This table is arranged by state, year, and total number of injuries. For each state, the industry with the most industries will be displayed at the top. Search for your state of interest.

## Table 3: Injuries By State, Year and Industry

```{r}
#| label: "Create Reactable State table"
#| echo: false

inj_tbls$st_yr_inj$pct <- round(inj_tbls$st_yr_inj$pct, 2)

inj_tbls$st_yr_inj <- inj_tbls$st_yr_inj %>% 
                      relocate(pct, .after = N) %>% 
                      relocate(industry_name, .after = year) %>% 
                      arrange(state, year, desc(N))
  


inj_tbls$st_yr_inj %>% reactable(searchable = TRUE,
                                    pageSizeOptions = c(25))
```
